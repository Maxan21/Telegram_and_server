from subprocess import check_output
import telebot
from telebot import types
import time
import sys
import random
import logging
level = logging.DEBUG
FORMAT = '%(asctime)s %(processName)s\%(name)-8s %(levelname)s: %(message)s'
logfile = '/root/my.log'
logging.basicConfig(format = FORMAT, level=level, filename = logfile )

logger = logging.getLogger(__name__)
debug = logger.debug
print = logger.info

start_time=time.time()
bot = telebot.TeleBot("") #—Ç–æ–∫–µ–Ω –±–æ—Ç–∞
bool1=True

user_id=[]

@bot.message_handler(commands=['start'])
def start(message):
    try:
        if check_output('systemctl status openvpn-server@server.service', shell=True) and  'Active: active (running)' in check_output('systemctl status openvpn-server@server.service', shell=True).decode('utf-8'):
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å üôà")
            btn2 = types.KeyboardButton("–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôä")
            markup.add(btn1, btn2)
            bot.send_message(message.chat.id, '–°–µ—Ä–≤–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω', reply_markup=markup)
    except Exception as e: 
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å üôà")
        btn2 = types.KeyboardButton("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôâ")
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, '–°–µ—Ä–≤–µ—Ä –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', reply_markup=markup)
@bot.message_handler(content_types=['text'])
def main(message):
    global bool1, start_time
    try:
        check=check_output('systemctl status openvpn-server@server.service', shell=True)
        check = check.decode('utf-8')
        if message.chat.id in user_id and  message.text=='–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôä' and 'Active: active (running)' in check:
            k=bot.send_message(message.chat.id, '–î–æ–∂–¥–∏—Ç–µ—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ü´°') 
            check_output('sudo systemctl stop  openvpn-server@server.service\nsudo systemctl stop openvpn.service\nsudo systemctl stop openvpn-iptables.service\ndocker stop watchtower\ndocker stop shadowbox', shell=True) 
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True) 
            btn1 = types.KeyboardButton("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôâ") 
            markup.add(btn1)
            bot.delete_message(message.chat.id,k.message_id) 
            bot.send_message(message.chat.id,'–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ...', reply_markup=markup)
        elif message.chat.id in user_id and message.text=='–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôä':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôâ")
            markup.add(btn1)
            bot.send_message(message.chat.id,'–ö—Ç–æ-—Ç–æ —É–∂–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏–ª —Ä–∞–±–æ—Ç—Éü§•', reply_markup=markup)
        elif message.chat.id in user_id and message.text=='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é':
            comand = 'shutdown now'  
            bot.delete_message(message.chat.id,check.message_id)
            try:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å üôà")
                btn2 = types.KeyboardButton("–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôä")
                markup.add(btn1, btn2)
                bot.send_message(message.chat.id, check_output(comand, shell = True),reply_markup=markup )
            except: 
                bot.send_message(message.chat.id, "Invalid input") 
        elif message.chat.id in user_id and message.text=='–í—ã–∫–ª—é—á–∏—Ç—å üôà':
            if time.time()-start_time<300:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                a=random.randint(0,1)
                A=["–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é", "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
                btn1 = types.KeyboardButton(A[a])
                btn2 = types.KeyboardButton(A[1-a])
                markup.add(btn1, btn2)
                check=bot.send_message(message.chat.id, text="–ë–æ—Ç –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ '–í—ã–∫–ª—é—á–∏—Ç—å'\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?", reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å üôà")
                btn2 = types.KeyboardButton("–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôä")
                markup.add(btn1, btn2)
                bot.send_message(message.chat.id, check_output('shutdown now', shell = True), reply_markup=markup)
        elif message.chat.id in user_id and message.text=="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å üôà")
            btn2 = types.KeyboardButton("–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôä")
            markup.add(btn1, btn2)
            bot.delete_message(message.chat.id,check.message_id)
            bot.send_message(message.chat.id, "üò∞", reply_markup=markup)
        elif message.chat.id in user_id and message.text=='–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôâ':
            if 'Active: active (running)' not in check:
                k=bot.send_message(message.chat.id, '–î–æ–∂–¥–∏—Ç–µ—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ü´°')
                check_output('sudo systemctl start openvpn-server@server.service\nsudo systemctl start openvpn.service\nsudo systemctl start openvpn-iptables.service\ndocker start watchtower\ndocker start shadowbox',shell = True)
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å üôà")
                btn2 = types.KeyboardButton("–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôä")
                markup.add(btn1, btn2)
                bool1=True
                bot.delete_message(message.chat.id,k.message_id)
                bot.send_message(message.chat.id,'–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æü•µ',reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å üôà")
                btn2 = types.KeyboardButton("–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôä")
                markup.add(btn1, btn2)

                bot.send_message(message.chat.id, "–ö—Ç–æ-—Ç–æ —É–∂–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª —Ä–∞–±–æ—Ç—Éü§ì", reply_markup=markup) 


        else:
            bot.send_message(message.from_user.id, '–î–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç')
    except Exception as e:
        if message.chat.id in user_id and message.text=='–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôä':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôâ")
            markup.add(btn1)
            bot.send_message(message.chat.id,'–ö—Ç–æ-—Ç–æ —É–∂–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏–ª —Ä–∞–±–æ—Ç—Éü§•', reply_markup=markup)
        elif message.chat.id in user_id and message.text=='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é':
            comand = 'shutdown now'  
            bot.delete_message(message.chat.id,check.message_id)
            try:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å üôà")
                btn2 = types.KeyboardButton("–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôä")
                markup.add(btn1, btn2)
                bot.send_message(message.chat.id, check_output(comand, shell = True),reply_markup=markup )
            except: 
                bot.send_message(message.chat.id, "Invalid input") 
        elif message.chat.id in user_id and message.text=='–í—ã–∫–ª—é—á–∏—Ç—å üôà':
            if time.time()-start_time<300:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                a=random.randint(0,1)
                A=["–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é", "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
                btn1 = types.KeyboardButton(A[a])
                btn2 = types.KeyboardButton(A[1-a])
                markup.add(btn1, btn2)
                check=bot.send_message(message.chat.id, text="–ë–æ—Ç –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ '–í—ã–∫–ª—é—á–∏—Ç—å'\n–í—ã —É–≤–µ—Ä–µ–Ω—ã?", reply_markup=markup)
            else:
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                btn1 = types.KeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å üôà")
                btn2 = types.KeyboardButton("–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôä")
                markup.add(btn1, btn2)
                bot.send_message(message.chat.id, check_output('shutdown now', shell = True), reply_markup=markup)
        elif message.chat.id in user_id and message.text=="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å üôà")
            btn2 = types.KeyboardButton("–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôä")
            markup.add(btn1, btn2)
            bot.delete_message(message.chat.id,check.message_id)
            bot.send_message(message.chat.id, "üò∞", reply_markup=markup)
        elif message.chat.id in user_id and message.text=='–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôâ':
            k=bot.send_message(message.chat.id, '–î–æ–∂–¥–∏—Ç–µ—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ü´°')
            check_output('sudo systemctl start openvpn-server@server.service\nsudo systemctl start openvpn.service\nsudo systemctl start openvpn-iptables.service\ndocker start watchtower\ndocker start shadowbox',shell = True)
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–í—ã–∫–ª—é—á–∏—Ç—å üôà")
            btn2 = types.KeyboardButton("–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å üôä")
            markup.add(btn1, btn2)
            bool1=True
            bot.delete_message(message.chat.id,k.message_id)
            bot.send_message(message.chat.id,'–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æü•µ',reply_markup=markup)
        else:
            bot.send_message(message.from_user.id, '–î–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç')


if __name__ == '__main__':
    while True:
        try: #–¥–æ–±–∞–≤–ª—è–µ–º try –¥–ª—è –±–µ—Å–ø–µ—Ä–µ–±–æ–π–Ω–æ–π —Ä–∞–±–æ—Ç—ã
            bot.polling(none_stop=True) #–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
        except:
            time.sleep(10) #–≤ —Å–ª—É—á–∞–µ –ø–∞–¥–µ–Ω–∏—è


sys.stdout = LoggerWriter(logger.info)
sys.stderr = LoggerWriter(logger.warning)
